<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- spring可以自动去扫描base-pack下面或者子包下面的java文件，
		@Service用于标注业务层组件
		@Controller用于标注控制层组件（如struts中的action）
		@Repository用于标注数据访问组件，即DAO组件
		@Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。-->
	<context:component-scan base-package="com.zhengke"></context:component-scan>
 	
 	<context:property-placeholder location="classpath:db.properties"/>
    
  <!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:dbconfig.properties</value>
			</list>
		</property>
	</bean> -->
    
	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close"> 
	  <property name="driverClassName" value="${jdbc.driverClassName}" /> 
	  <property name="url" value="${jdbc.url}" /> 
	  <property name="username" value="${jdbc.username}" /> 
	  <property name="password" value="${jdbc.password}" /> 
	 <!--  配置初始化大小、最小、最大  -->
	  <property name="initialSize" value="${jdbc.initialSize}" /> 
	  <property name="minIdle" value="${jdbc.minIdle}" /> 
	  <property name="maxActive" value="${jdbc.maxActive}" />	 
	  <!-- 配置获取连接等待超时的时间  -->
	  <property name="maxWait" value="${jdbc.maxWait}" />	 
	<!--   配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  -->
	  <property name="timeBetweenEvictionRunsMillis" value="60000" />	 
	 <!--  配置一个连接在池中最小生存的时间，单位是毫秒  -->
	  <property name="minEvictableIdleTimeMillis" value="300000" />	 
	  <property name="testWhileIdle" value="true" />	 
	<!--   这里建议配置为TRUE，防止取到的连接不可用  -->
	  <property name="testOnBorrow" value="true" /> 
	  <property name="testOnReturn" value="false" />
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations" value="classpath:com/zhengke/common/pojo/*.hbm.xml" />
		<!-- <property name="packagesToScan" value="com.zhengke.common.pojo"/> -->
		<property name="hibernateProperties">
			<value>
			   <!--  hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory -->
				<!-- hibernate.dialect=org.hibernate.dialect.MySQLDialect -->
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=false
				hibernate.connection.autocommit=false
	      	</value>
		</property>
	</bean> 

    <context:annotation-config />
	<!-- hibernate事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
	<!-- 使用基于注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
</beans>