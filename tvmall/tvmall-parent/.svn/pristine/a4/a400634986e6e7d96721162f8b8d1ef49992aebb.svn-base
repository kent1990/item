<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 	
<mapper namespace="xtgl040Mapper">
	<!-- 查询用户根据条件，分页 -->
	<select id="queryUser" parameterType="java.util.Map" resultType="java.util.Map">
		select * from sys_user su where 1=1
		<if test="name != null and name != ''">
			and su.user_name like '%${name}%'
		</if>
		<if test="phone != null and phone != ''">
			and su.user_phone like '%${phone}%'
		</if>
		<if test="user_status != null and user_status != ''">
			and su.user_status=#{user_status}
		</if>
		<if test="iden != null and iden != ''">
			and su.iden=#{iden}
		</if>
		order by create_time desc		
	</select>
	
	<!-- 查询用户条数，根据条件 -->
	<select id="queryUserCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from sys_user su where 1=1
		<if test="name != null and name != ''">
			and su.user_name like '%${name}%'
		</if>
		<if test="phone != null and phone != ''">
			and su.user_phone like '%${phone}%'
		</if>
		<if test="user_status != null and user_status != ''">
			and su.user_status=#{user_status}
		</if>
		<if test="iden != null and iden != ''">
			and su.iden=#{iden}
		</if>
	</select>
	
	<select id="saveQueryCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*) from sys_user where login_name=#{value}
	</select>
	<select id="saveQueryCountByPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*) from sys_user where user_phone=#{value}
	</select>


	<!-- 添加用户 -->
	<insert id="saveSysUserMap" parameterType="java.util.Map">
	   insert into sys_user
	    (login_name,login_pwd,user_name,user_phone,last_login_time,login_times,user_status,
	     create_time,create_user_id,create_user_name,position_e,e_mail,gender
	     )
	    values (#{login_name},#{login_pwd},#{user_name},#{user_phone},#{last_login_time},#{login_times},#{user_status},
	     #{create_time},#{create_user_id},#{create_user_name},#{position_e},#{e_mail},#{gender}
	     )
	
	</insert>
	<!-- 保存一个用户 -->
	<insert id="saveSysUser" parameterType="com.zhengke.pojo.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="loginName != null">
				login_name,
			</if>
			<if test="loginPwd != null">
				login_pwd,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userPhone != null">
				user_phone,
			</if>
			<if test="identity != null">
				identity,
			</if>
			<if test="lastLoginIp != null">
				last_login_ip,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="loginTimes != null">
				login_times,
			</if>
			<if test="user_status != null">
				user_status,
			</if>
			<if test="hoId != null">
				ho_id,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="chatId != null">
				chat_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				#{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="identity != null">
				#{identity,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginIp != null">
				#{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=VARCHAR},
			</if>
			<if test="loginTimes != null">
				#{loginTimes,jdbcType=INTEGER},
			</if>
			<if test="user_status != null">
				#{user_status,jdbcType=TINYINT},
			</if>
			<if test="hoId != null">
				#{hoId,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=INTEGER},
			</if>
			<if test="createUserName != null">
				#{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="updateUserName != null">
				#{updateUserName,jdbcType=VARCHAR},
			</if>
			<if test="chatId != null">
				#{chatId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<!-- 删除用户，可批量删除 -->
	<delete id="deleteSysUser">
		delete from sys_user where 
		<foreach collection="array" item="em" index="index">
			 user_id=#{em}
		</foreach>
	</delete>
	
	
	<!--  -->
	<update id="updateSysUserMap" parameterType="java.util.Map">
		update sys_user
		<set>
			<if test="login_name != null &amp;&amp;login_name!=''">
				login_name = #{login_name,jdbcType=VARCHAR},
			</if>
			<if test="login_pwd != null &amp;&amp;login_pwd!=''">
				login_pwd = #{login_pwd,jdbcType=VARCHAR},
			</if>
			<if test="user_name != null &amp;&amp;user_name!=''">
				user_name = #{user_name,jdbcType=VARCHAR},
			</if>
			<if test="user_phone != null &amp;&amp;user_phone!=''">
				user_phone = #{user_phone,jdbcType=VARCHAR},
			</if>
			<if test="user_status != null &amp;&amp;user_status!=''">
				user_status = #{user_status,jdbcType=TINYINT},
			</if>		
			<if test="position_e != null &amp;&amp;position_e!=''">
				position_e = #{position_e,jdbcType=TINYINT},
			</if>
			<if test="e_mail != null &amp;&amp;e_mail!=''">
				e_mail = #{e_mail,jdbcType=TINYINT},
			</if>
			<if test="gender != null &amp;&amp;gender!=''">
				gender = #{gender,jdbcType=TINYINT},
			</if>
			<if test="update_time != null &amp;&amp;update_time!=''">
				update_time = #{update_time,jdbcType=VARCHAR},
			</if>
			<if test="update_user_id != null &amp;&amp;update_user_id!=''">
				update_user_id = #{update_user_id,jdbcType=INTEGER},
			</if>
			<if test="update_user_name != null &amp;&amp;update_user_name!=''">
				update_user_name = #{update_user_name,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	
	
	<!-- 修改用户信息 -->
	<update id="updateSysUser" parameterType="com.zhengke.pojo.SysUser">
		update sys_user
		<set>
			<if test="loginName != null">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				login_pwd = #{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				user_phone = #{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginIp != null">
				last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
			</if>
			<if test="loginTimes != null">
				login_times = #{loginTimes,jdbcType=INTEGER},
			</if>
			<if test="user_status != null">
				user_status = #{user_status,jdbcType=TINYINT},
			</if>
			<if test="hoId != null">
				ho_id = #{hoId,jdbcType=INTEGER},
			</if>		
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
			<if test="createUserName != null">
				create_user_name = #{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=INTEGER},
			</if>
			<if test="updateUserName != null">
				update_user_name = #{updateUserName,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
	<!-- 获取所有角色 -->
	<select id="queryRoles" resultType="java.util.Map">
		select * from sys_roles where status=1
	</select>
	
	<!-- 获取本用户所拥有的角色 -->
	<select id="queryRoleByUser" parameterType="java.lang.String" resultType="java.util.Map">
		select * from sys_roles sr
		left join sys_role_user sru
		on sru.role_id=sr.role_id
		where sru.user_id=#{value}
	</select>
	
	<!-- 删除本用户所有的角色 -->
	<delete id="deleteRolesUser" parameterType="java.lang.Integer">
		delete from sys_role_user where user_id=#{value}
	</delete>
	
	<!-- 为本用户设置角色 -->
	<insert id="saveRolesUser" parameterType="java.util.List">
		insert into sys_role_user (user_id, role_id, create_time, create_user_id, create_user_name)
	    values 
    	<foreach collection="list" item="emp" index="index" separator=",">
            (#{emp.userId}, #{emp.roleId}, #{emp.createTime}, #{emp.createUserId}, #{emp.createUserName})
        </foreach>
	</insert>
	
	<update id="updateUserPass" parameterType="java.util.Map">
		update sys_user
			set login_pwd = #{login_pwd}
		where user_id = #{user_id}
	</update>
	
	<!-- 查询所有权限信息 -->
	<select id="findStuPopedomList" resultType="map">
		select * from sys_stu_popedom sp
		where 1=1
	</select>
	
	<!-- 根据用户id查询权限信息 -->
	<select id="findStuPopedomListByUserId" resultType="map" parameterType="string">
		select * from sys_stu_rights sp
		where 1=1 and stu_user_id = #{user_id}
	</select>
	
	<!-- 删用户所有的权限 -->
	<delete id="deleteStuPopedom" parameterType="java.lang.Integer">
		delete from sys_stu_rights where stu_user_id = #{value}
	</delete>
	
	<!-- 为用户设置权限 -->
	<insert id="saveStuPopedom" parameterType="java.util.List">
		insert into sys_stu_rights (stu_user_id, popedom_id, create_time, create_user_id, create_user_name)
	    values 
    	<foreach collection="list" item="emp" index="index" separator=",">
            (#{emp.stu_user_id}, #{emp.popedom_id}, #{emp.create_time}, #{emp.create_user_id}, #{emp.create_user_name})
        </foreach>
	</insert>
</mapper>